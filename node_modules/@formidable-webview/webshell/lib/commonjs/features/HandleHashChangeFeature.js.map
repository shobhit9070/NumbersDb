{"version":3,"sources":["HandleHashChangeFeature.ts"],"names":["defaultOptions","shouldResetHashOnEvent","HandleHashChangeFeature","FeatureBuilder","script","linkPressScript","identifier","withShellHandler","build"],"mappings":";;;;;;;AACA;;;;;;AAqCA,IAAMA,cAAiD,GAAG;AACxDC,EAAAA,sBAAsB,EAAE;AADgC,CAA1D;AAIA;;;;;;;;;;;;;;;;;AAgBO,IAAMC,uBAQZ,GAAG,IAAIC,0BAAJ,CAAmB;AACrBC,EAAAA,MAAM,EAAEC,eADa;AAErBL,EAAAA,cAAc,EAAdA,cAFqB;AAGrBM,EAAAA,UAAU,EAAE;AAHS,CAAnB,EAKDC,gBALC,CAKoD,iBALpD,EAMDC,KANC,EARG","sourcesContent":["import linkPressScript from './HandleHashChangeFeature.webjs';\nimport FeatureBuilder from '../FeatureBuilder';\nimport type { DOMRect, PropDefinition } from '../types';\nimport type { FeatureClass } from '../Feature';\n\n/**\n * An object describing customization for the hash change feature.\n *\n * @public\n */\nexport interface HandleHashChangeOptions {\n  /**\n   * Reset the hash to the empty string after triggering the event.\n   * This is recommended if you want to make sure any upcoming link press on\n   * an anchor with a local hash `href` will trigger the `hashchange` event.\n   *\n   * @defaultValue false\n   */\n  shouldResetHashOnEvent?: boolean;\n}\n\n/**\n * A hash change event.\n *\n * @public\n */\nexport interface HashChangeEvent {\n  /**\n   * The hash (“#” included).\n   */\n  hash: string;\n  /**\n   * The bounding rectangle of the element targeted by hash.\n   * See {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect | Element.getBoundingClientRect()}\n   */\n  targetElementBoundingRect: DOMRect;\n}\n\nconst defaultOptions: Required<HandleHashChangeOptions> = {\n  shouldResetHashOnEvent: false\n};\n\n/**\n * This feature provide `onDOMHashChange` prop with payloads of type {@link HashChangeEvent} to intercept hashchange events, triggered when the hash fragment of the URL changes.\n * An event will be triggered when the user clicks on anchors like this:\n *\n * ```html\n * <a href=\"#subresource\">Let's Jump to Subresource</a>\n * ```\n *\n * Or when JavaScript code imperatively changes the hash fragment of current location.\n * The feature can be customized with {@link HandleHashChangeOptions}.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event | MDN—hashchange event}.\n *\n * For an example, read {@link https://formidable-webview.github.io/webshell//docs/autoheight#handling-hashchange-events | Handling hashchange events}.\n *\n * @public\n */\nexport const HandleHashChangeFeature: FeatureClass<\n  HandleHashChangeOptions,\n  {\n    onDOMHashChange: PropDefinition<\n      'onDOMHashChange',\n      (e: HashChangeEvent) => void\n    >;\n  }\n> = new FeatureBuilder({\n  script: linkPressScript,\n  defaultOptions,\n  identifier: 'org.formidable-webview/webshell.handle-hash-change'\n})\n  .withShellHandler<'onDOMHashChange', HashChangeEvent>('onDOMHashChange')\n  .build();\n"]}