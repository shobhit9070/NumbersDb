{"version":3,"sources":["HandleLinkPressFeature.ts"],"names":["defaultOptions","preventDefault","ignoreHashChange","HandleLinkPressFeature","FeatureBuilder","script","linkPressScript","identifier","withShellHandler","build"],"mappings":";;;;;;;AACA;;;;;;AA0HA,IAAMA,cAA0C,GAAG;AACjDC,EAAAA,cAAc,EAAE,IADiC;AAEjDC,EAAAA,gBAAgB,EAAE;AAF+B,CAAnD;AAKA;;;;;;;;;;;;;;;;;AAgBO,IAAMC,sBAQZ,GAAG,IAAIC,0BAAJ,CAAmB;AACrBC,EAAAA,MAAM,EAAEC,eADa;AAErBN,EAAAA,cAAc,EAAdA,cAFqB;AAGrBO,EAAAA,UAAU,EAAE;AAHS,CAAnB,EAKDC,gBALC,CAKmD,gBALnD,EAMDC,KANC,EARG","sourcesContent":["import linkPressScript from './HandleLinkPressFeature.webjs';\nimport FeatureBuilder from '../FeatureBuilder';\nimport type { DOMRect, PropDefinition } from '../types';\nimport type { FeatureClass } from '../Feature';\n\n/**\n * An object describing customization for the linkPress feature.\n *\n * @public\n */\nexport interface LinkPressOptions {\n  /**\n   * Prevent click events on anchors to propagate.\n   *\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n\n  /**\n   * Don't trigger an event when the target `href` is inside the page, e.g.\n   * `#top`. See also {@link HandleHashChangeFeature}.\n   *\n   * @defaultValue true\n   */\n  ignoreHashChange?: boolean;\n}\n\n/**\n * An object containing the custom data attributes of the anchor which has been clicked.\n *\n * @public\n */\nexport interface DataAttributes {\n  [key: string]: string;\n}\n\n/**\n * The target of a link press event.\n *\n * @public\n */\nexport interface LinkPressTarget {\n  /**\n   * The full URI of the target.\n   */\n  uri: string;\n  /**\n   * The URI scheme.\n   */\n  scheme: string;\n  /**\n   * The exact content of the `href` attribute.\n   */\n  hrefAttribute: string;\n  /**\n   * The `download` attribute, if present.\n   */\n  downloadAttribute: string | null;\n  /**\n   * The `target` attribute, if present.\n   */\n  targetAttribute: string | null;\n  /**\n   * The `hreflang` attribute, if present.\n   */\n  hreflangAttribute: string | null;\n  /**\n   * The `referrerpolicy` attribute, if present.\n   */\n  referrerpolicyAttribute: string | null;\n  /**\n   * The `rel` attribute, if present.\n   */\n  relAttribute: string | null;\n  /**\n   * The `type` attribute, if present.\n   */\n  typeAttribute: string | null;\n  /**\n   * The `id` attribute, if present.\n   */\n  idAttribute: string | null;\n  /**\n   * The `class` attribute, if present.\n   */\n  classAttribute: string | null;\n  /**\n   * The `name` attribute, if present.\n   */\n  nameAttribute: string | null;\n  /**\n   * The `data-` attributes, if present.\n   *\n   * @remarks\n   * Dashes are converted to camelCase. See {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset  | HTMLElement.dataset}.\n   */\n  dataAttributes: DataAttributes;\n  /**\n   * The bounding rectangle of the anchor which has been clicked.\n   * See {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect | Element.getBoundingClientRect()}\n   */\n  clickedAnchorBoundingRect: DOMRect;\n  /**\n   * An object describing the page location from which the click originated.\n   */\n  page: {\n    /**\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/API/Location/origin}.\n     *\n     * @remarks\n     * Has the special value `null` when not bound to a URL (`{ html }` source).\n     */\n    origin: string | null;\n    /**\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/API/Location/href}.\n     *\n     * @remarks\n     * Has the special value `about:blank` when not bound to a URL (`{ html }` source).\n     */\n    href: string;\n  };\n}\n\nconst defaultOptions: Required<LinkPressOptions> = {\n  preventDefault: true,\n  ignoreHashChange: true\n};\n\n/**\n * This feature provides `onDOMLinkPress` prop with payloads of type {@link LinkPressTarget}.\n * It will intercept clicks on anchors such as:\n *\n * ```html\n * <a href=\"https://domain.com/\">Let's Travel</a>\n * ```\n *\n * @remarks\n * By default, it will prevent the click from propagating. But you can disable\n * this option, see {@link LinkPressOptions}.\n *\n * If you need to intercept click on hash fragments, consider {@link HandleHashChangeFeature} instead.\n *\n * @public\n */\nexport const HandleLinkPressFeature: FeatureClass<\n  LinkPressOptions,\n  {\n    onDOMLinkPress: PropDefinition<\n      'onDOMLinkPress',\n      (t: LinkPressTarget) => void\n    >;\n  }\n> = new FeatureBuilder({\n  script: linkPressScript,\n  defaultOptions,\n  identifier: 'org.formidable-webview/webshell.link-press'\n})\n  .withShellHandler<'onDOMLinkPress', LinkPressTarget>('onDOMLinkPress')\n  .build();\n"]}