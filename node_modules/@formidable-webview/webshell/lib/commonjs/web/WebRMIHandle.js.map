{"version":3,"sources":["WebRMIHandle.ts"],"names":["WebRMIHandle","webViewRef","registry","reporter","feat","eventId","message","hasWebHandler","dispatchError","identifier","hasFeature","injectJavaScript","debug","WebRMIController"],"mappings":";;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQaA,Y;;;;;AAEX,wBACEC,UADF,EAEEC,QAFF,EAGEC,QAHF,EAIE;AAAA;;AAAA;;AACA,8BAAMF,UAAN,EAAkBE,QAAlB;;AADA;;AAEA,UAAKD,QAAL,GAAgBA,QAAhB;AAFA;AAGD;;;;qCAKCE,I,EAA4BC,O,EAAuBC,O,EAAuB;AAC1E,UAAI,CAACF,IAAI,CAACG,aAAL,CAAmBF,OAAnB,CAAL,EAAkC;AAChC,aAAKF,QAAL,CAAcK,aAAd,CACE,gCADF,EAEEJ,IAAI,CAACK,UAFP,EAGEJ,OAHF;AAKA;AACD;;AACD,UAAI,CAAC,KAAKH,QAAL,CAAcQ,UAAd,CAAyBN,IAAzB,CAAL,EAAqC;AACnC,aAAKD,QAAL,CAAcK,aAAd,CACE,6BADF,EAEEJ,IAAI,CAACK,UAFP;AAIA;AACD;;AACD,WACGE,gBADH,oBACkEP,IAAI,CAACK,UADvE,EACqFJ,OADrF,EACgGC,OADhG;AAED;;;6BAEQM,K,EAAgB;AACvB,WAAKD,gBAAL,qBAAyDC,KAAzD;AACD;;;;EApC+BC,mC","sourcesContent":["import { RefObject } from 'react';\nimport Feature from '../Feature';\nimport FeatureRegistry from '../FeatureRegistry';\nimport { WebRMIController } from './WebRMIController';\nimport {\n  WebHandle,\n  WebHandlerDefinition,\n  ExtractWebHandlerSpecFromDef\n} from '../types';\nimport Reporter from '../Reporter';\n\nexport class WebRMIHandle extends WebRMIController implements WebHandle {\n  private registry: FeatureRegistry<any>;\n  constructor(\n    webViewRef: RefObject<any>,\n    registry: FeatureRegistry<any>,\n    reporter: Reporter\n  ) {\n    super(webViewRef, reporter);\n    this.registry = registry;\n  }\n\n  postMessageToWeb<\n    D extends WebHandlerDefinition<any, any>,\n    S extends ExtractWebHandlerSpecFromDef<D>\n  >(feat: Feature<any, any, S>, eventId: D['eventId'], message: D['payload']) {\n    if (!feat.hasWebHandler(eventId)) {\n      this.reporter.dispatchError(\n        'WEBSH_FEAT_MISSING_WEB_HANDLER',\n        feat.identifier,\n        eventId\n      );\n      return;\n    }\n    if (!this.registry.hasFeature(feat)) {\n      this.reporter.dispatchError(\n        'WEBSH_FEAT_MISSING_IN_SHELL',\n        feat.identifier\n      );\n      return;\n    }\n    this\n      .injectJavaScript`window.ReactNativeWebshell.postMessageToWeb(${feat.identifier},${eventId},${message});`;\n  }\n\n  setDebug(debug: boolean) {\n    this.injectJavaScript`window.ReactNativeWebshell.debug=${debug};`;\n  }\n}\n"]}